library("lattice", lib.loc="/usr/lib/R/library")
install.packages("ggplot2")
install.packages("tidyr")
install.packages(c("httr", "httpuv", "jsonlite", "swirl"))
install.packages("data.table")
q()
load("/media/shikharomar/genesis2/genesis2/Learn/R projects/titanic/titanic.RData")
install.packages("RDocumentation")
installed.packages("RDocumentation")
installed.packages("caret")
library("UsingR")
install.packages("UsingR")
install.packages("UsingR")
install.packages("manipulate")
install.packages("caret")
library("swirl")
swirl()
swirl()
swirl()
install_course("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = "red")
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coefficients[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
rhs-lhs
lhs - rhs
all.equal(lhs, rhs)
varCHILD <- var(galton$child)
varCHILD <- var(galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varEst + varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag )
cov(efit$residuals,attenu$dist )
cor(gpa_nor, gch_nor)
l_nor <- lm(gpa_nor ~ gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
x*w/length(x)
sum(x*w)/length(x)
sum(x*w)
fit <- lm(x ~ 1, weights = w)
summary(fit)
fit <- lm(x ~ 0, weights = w)
summary(fit)
sum(fit$residuals)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x - 1)
coef(fit)
lm(y ~ 0+x)$coef
datasets::mtcars
data <- datasets::mtcars
dt <- datasets::mtcars
lm(dt$mpg ~ dt$wt)$coef[2]
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x <- (x - mean(x))/sd(x)
x
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ 0+x)$coef
lm(y ~ x)$coef[1]
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
?cex
?points
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myPlot(beta), beta = manipulate::slider(0.4, .8, step = 0.02))
head(freqData)
head(freqData, 20)
as.data.frame(table(x, y))
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myPlot(beta), beta = manipulate::slider(0.4, .8, step = 0.02))
freqData
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myPlot(beta), beta = manipulate::slider(0.4, .8, step = 0.02))
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .07 * freqData$freq,
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myPlot(beta), beta = manipulate::slider(0.4, .8, step = 0.02))
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
x
head(freqData)
freqData <- as.data.frame(table(x, y))
head(freqData)
library("swirl")
swirl()
fit <- lm(child ~ parent, data = galton)
sqrt(fit$residuals^2/n-2)
sqrt(sum(fit$residuals^2)/n-2)
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- (galton$child - mu)^2
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(fit)
1 - sRes/sTos
j
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
head(trees)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
q()
install.packages("hflights")
library("swirl")
swirl()
rm(list = ls())
library("swirl")
swirl()
all <- lm( fertility ~ ., data = swiss )
all <- lm( Fertility ~ ., data = swiss )
summary(all)
lm(Fertility ~ agriculture, swiss)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(Examination, Education, data = swiss)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm( Fertility ~ . + ec, swiss)
coef(efit) - coef(all)
all$coefficients - efit$coefficients
setwd("/media/shikharomar/genesis2/genesis2/Learn/R projects/Seminar")
source(code.R)
source("code.R")
ibrary(pixmap)
library(pixmap)
library("pixmap")
?pixmap
system("convert strawberries.tif strawberries.ppm")
?read.pnm
image <- read.pnm("strawberries.ppm")
str(image)
red.matrix <- matrix(image@red, nrow = image@size[1], ncol = image@size[2])
green.matrix <- matrix(image@green, nrow = image@size[1], ncol = image@size[2])
blue.matrix <- matrix(image@blue, nrow = image@size[1], ncol = image@size[2])
rm(list = ls())
image <- read.pnm("strawberries.ppm") # reading image as matrix
# extracting individual color matrix
red.matrix <- matrix(image@red, nrow = image@size[1], ncol = image@size[2])
green.matrix <- matrix(image@green, nrow = image@size[1], ncol = image@size[2])
blue.matrix <- matrix(image@blue, nrow = image@size[1], ncol = image@size[2])
plot(image)
image(image)
mat <- red.matrix + blue.matrix + green.matrix
image(mat)
plot(image)
image(mat)
plot(image)
pallete()
install.packages("plotrix")
library(plotrix)
install.packages("RColorBrewer")
image(green.matrix, col = rainbow(7))
image(green.matrix, col = rainbow(255))
image(green.matrix, col = "green")
image(green.matrix, heat.color(255))
image(green.matrix, heat.colors(255))
image(green.matrix, col = heat.colors(255))
?image
image(t(flip(green.matrix, 1)))
image(t(green.matrix), col = heat.colors(255))
image(green.matrix, col = heat.colors(255))
x <- matrix(1:9, 3)
rotate <- function(x) apply(x, 2, rev)
rotate(x)
x
rotate <- function(x) t(apply(x, 2, rev))
rotate(x)
rotate <- function(x) t(apply(x, 1, rev))
rotate(x)
t(rotate(x))
image(green.matrix, col = heat.colors(255))
rotate <- function(x) t(apply(x, 2, rev))
image(rotate(green.matrix), col = heat.colors(255))
?rev
x
rotate(x)
y <- c(1,2,4)
rev(y)
rotate <- function(x) t(apply(x, 2, rev))
image(rotate(green.matrix), col = heat.colors(255))
par(nrow(2,2))
par(mfrow = c(2,2))
plot(image)
image(rotate(green.matrix), col = heat.colors(255))
image(rotate(red.matrix), col = heat.colors(255))
image(rotate(blue.matrix), col = heat.colors(255))
png(filename="matrices.png")
plot(image)
image(rotate(green.matrix), col = heat.colors(255))
image(rotate(red.matrix), col = heat.colors(255))
image(rotate(blue.matrix), col = heat.colors(255))
dev.off()
par(mfrow = c(2,2))
par(mfrow = 1
)
par(mfrow = c(1))
image(rotate(blue.matrix), col = heat.colors(255))
par(mfrow = c(2,2))
plot(image)
par(mfrow = c(2,2))
png(filename="matrices.png")
plot(image)
image(rotate(green.matrix), col = heat.colors(255))
image(rotate(red.matrix), col = heat.colors(255))
dev.off()
par(mfrow = c(2,2))
plot(image)
image(rotate(green.matrix), col = heat.colors(255))
image(rotate(red.matrix), col = heat.colors(255))
image(rotate(blue.matrix), col = heat.colors(255))
png(filename="matrices.png")
par(mfrow = c(2,2))
plot(image)
image(rotate(green.matrix), col = heat.colors(255))
image(rotate(red.matrix), col = heat.colors(255))
image(rotate(blue.matrix), col = heat.colors(255))
dev.off()
rm(x, y)
rm(mat)
red.matrix.svd <- svd(red.matrix)
red.d <- red.matrix.svd$d
red.u <- red.matrix.svd$u
red.v <- red.matrix.svd$v
k <- 5
red.comprsd <- red.u[, 1:k]%*%diag(red.d[1:k])%*%t(v[, 1:k])
red.comprsd <- red.u[, 1:k]%*%diag(red.d[1:k])%*%t(red.v[, 1:k])
length(red.d)
image(rotate(red.comprsd), col = heat.colors(255))
red.comprsd <- red.u[, 1:50]%*%diag(red.d[1:50])%*%t(red.v[, 1:50])
image(rotate(red.comprsd), col = heat.colors(255))
red.comprsd <- red.u[, 1:100]%*%diag(red.d[1:100])%*%t(red.v[, 1:100])
image(rotate(red.comprsd), col = heat.colors(255))
par(mfrow = c(2,1))
image(rotate(red.comprsd), col = heat.colors(255))
image(rotate(green.matrix), col = heat.colors(255))
par(mfrow = c(1,2))
image(rotate(red.comprsd), col = heat.colors(255))
image(rotate(red.matrix), col = heat.colors(255))
par(mfrow = c(3, 2))
image(rotate(red.matrix), col = heat.colors(255))
for (i in c(10, 30, 50, 80, 100))
{
red.comprsd <- red.u[,1:i] %*% diag(red.d[1:i]) %*% t(red.v[,1:i])
image(rotate(red.comprsd), col = heat.colors(255))
}
png("results.png")
par(mfrow = c(3, 2))
image(rotate(red.matrix), col = heat.colors(255))
for (i in c(10, 30, 50, 80, 100))
{
red.comprsd <- red.u[,1:i] %*% diag(red.d[1:i]) %*% t(red.v[,1:i])
image(rotate(red.comprsd), col = heat.colors(255))
}
dev.off()
for (i in c(10, 30, 50, 80, 100))
{
red.comprsd <- red.u[,1:i] %*% diag(red.d[1:i]) %*% t(red.v[,1:i])
image(rotate(red.comprsd), col = heat.colors(255))
}
for (i in c(10, 30, 50, 80, 100))
{
red.comprsd <- red.u[,1:i] %*% diag(red.d[1:i]) %*% t(red.v[,1:i])
png(paste('red.comprsd', i, '.png', sep = ''))
image(rotate(red.comprsd), col = heat.colors(255))
dev.off()
}
png(paste("red.original")
)
image(rotate(red.matrix), col = heat.colors(255))
dev.off()
q()
